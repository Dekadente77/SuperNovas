{"ast":null,"code":"var _jsxFileName = \"/home/vinacho/Dev/SuperNovas/src/components/ClaimButtons.js\";\nimport React from \"react\";\nimport '../styles/Global.css';\nimport '../styles/Metamask.css';\nimport { Button, TextField, Fab } from '@material-ui/core';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Web3 = require('web3'); // TEST\n// const OPENSEA_WEB = \"https://testnets.opensea.io/assets/0xbEA8123277142dE42571f1fAc045225a1D347977/\";\n//const NFT_CONTRACT_ADDRESS = \"0xbEA8123277142dE42571f1fAc045225a1D347977\"; //test\n// MAINNET\n//const OPENSEA_WEB = \"https://opensea.io/assets/0xbEA8123277142dE42571f1fAc045225a1D347977/\";\n\n\nconst NFT_CONTRACT_ADDRESS = \"0x270dFdAf253712FA86273D114B27b399Ef333039\";\nconst NFT_ABI = [{\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"baseTokenURI\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"approved\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"Approval\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bool\",\n    \"name\": \"approved\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"ApprovalForAll\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"approve\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"numSuperNovas\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"getSuperNovas\",\n  \"outputs\": [],\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint8\",\n    \"name\": \"numSuperNovas\",\n    \"type\": \"uint8\"\n  }],\n  \"name\": \"mintAllowList\",\n  \"outputs\": [],\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"mintFreeList\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"previousOwner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnershipTransferred\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [],\n  \"name\": \"pausePrivateSale\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"pauseSale\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"renounceOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"numSuperNovas\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"reserveAirdrop\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"safeTransferFrom\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"bytes\",\n    \"name\": \"_data\",\n    \"type\": \"bytes\"\n  }],\n  \"name\": \"safeTransferFrom\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address[]\",\n    \"name\": \"addresses\",\n    \"type\": \"address[]\"\n  }],\n  \"name\": \"setAllowList\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"bool\",\n    \"name\": \"approved\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"setApprovalForAll\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"baseURI\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"setBaseURI\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address[]\",\n    \"name\": \"addresses\",\n    \"type\": \"address[]\"\n  }],\n  \"name\": \"setFreeList\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"startPrivateSale\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"startSale\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"Transfer\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"transferFrom\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"transferOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"withdrawAll\",\n  \"outputs\": [],\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"balanceOf\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"getApproved\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"hasPrivateSaleStarted\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"hasSaleStarted\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"isApprovedForAll\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"MAX_GIRLS\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"minted\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"name\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"addr\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"numAllowMint\",\n  \"outputs\": [{\n    \"internalType\": \"uint8\",\n    \"name\": \"\",\n    \"type\": \"uint8\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"addr\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"numFreeMint\",\n  \"outputs\": [{\n    \"internalType\": \"uint8\",\n    \"name\": \"\",\n    \"type\": \"uint8\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"owner\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"ownerOf\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"bytes4\",\n    \"name\": \"interfaceId\",\n    \"type\": \"bytes4\"\n  }],\n  \"name\": \"supportsInterface\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"symbol\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"_tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"tokenURI\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nconst style = {\n  backgroundColor: '#ffff02',\n  color: '#000000',\n  fontSize: 'calc(12px + 2vmin)',\n  fontFamily: 'lemon',\n  boxShadow: 'none',\n  borderRadius: '10px',\n  marginTop: '20px',\n  '&:hover': {\n    backgroundColor: '#8CFF9B',\n    color: '#ffffff',\n    boxShadow: 'none'\n  }\n};\nconst styleClaim = {\n  backgroundColor: '#ffff02',\n  color: '#000000',\n  fontSize: 'calc(12px + 2vmin)',\n  fontFamily: 'lemon',\n  boxShadow: 'none',\n  borderRadius: '10px',\n  margin: '0 10px 0 0',\n  '&:hover': {\n    backgroundColor: '#27D3CB',\n    color: '#ffffff',\n    boxShadow: 'none'\n  }\n};\nconst styleBuy = {\n  backgroundColor: '#ffff02',\n  position: 'relative',\n  color: '#000000',\n  fontSize: 'calc(12px + 2vmin)',\n  fontFamily: 'lemon',\n  boxShadow: 'none',\n  borderRadius: '10px',\n  '&:hover': {\n    backgroundColor: '#8CFF9B',\n    color: '#ffffff',\n    boxShadow: 'none'\n  }\n};\nconst inputProps = {\n  min: 1,\n  max: 20\n};\n\nclass ClaimButtons extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAccountsChanged = accounts => {\n      if (accounts.length === 0) {\n        this.setState({\n          currentAccount: null\n        });\n      } else if (accounts[0] !== this.state.currentAccount) {\n        this.setState({\n          currentAccount: accounts[0]\n        });\n        this.updateInitialStates();\n      }\n    };\n\n    this.connect = () => {\n      console.log(this.ethereum);\n\n      if (this.ethereum === null || this.ethereum === undefined) {\n        alert(\"no wallet\");\n        return;\n      }\n\n      if (this.state.currentAccount) {\n        console.log(\"account already connected\");\n        return;\n      }\n\n      this.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => this.handleAccountsChanged(accounts)).catch(err => {\n        if (err.code === 4001) {\n          // EIP-1193 userRejectedRequest error\n          // If this happens, the user rejected the connection request.\n          console.log('Please connect to MetaMask.');\n        } else {\n          console.error(err);\n        }\n      });\n    };\n\n    this.getSuperNovas = (contractAddress, contractABI, numPurchase) => {\n      const account = this.state.currentAccount;\n\n      if (account === null) {\n        console.log('no account detected');\n        this.connect();\n        return;\n      }\n\n      numPurchase = parseInt(numPurchase);\n      const amount = Web3.utils.toBN('40000000000000000') * numPurchase;\n      this.setState({\n        isSendingTransaction: true\n      });\n      const encodedAdoptFunction = this.nftContract.methods.getSuperNovas(numPurchase).encodeABI();\n      const transactionOptions = {\n        from: account,\n        to: contractAddress,\n        data: encodedAdoptFunction,\n        value: amount\n      };\n      this.web3.eth.sendTransaction(transactionOptions, (err, transactionId) => {\n        if (err) {\n          console.log('SuperNovas mint failed', err);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint failed!\"\n          });\n        } else {\n          console.log('Payment successful', transactionId);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint successful! Please check Metamask for details and refresh when its done.\"\n          });\n        }\n      }).on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"on confirmation\", confirmationNumber);\n        window.location.reload(false);\n      });\n    };\n\n    this.mintAllowList = (contractAddress, contractABI, numPurchase) => {\n      const account = this.state.currentAccount;\n\n      if (account === null) {\n        console.log('no account detected');\n        this.connect();\n        return;\n      }\n\n      numPurchase = parseInt(numPurchase);\n      const amount = Web3.utils.toBN('30000000000000000') * numPurchase;\n      this.setState({\n        isSendingTransaction: true\n      });\n      const encodedAdoptFunction = this.nftContract.methods.getSuperNovas(numPurchase).encodeABI();\n      const transactionOptions = {\n        from: account,\n        to: contractAddress,\n        data: encodedAdoptFunction,\n        value: amount\n      };\n      this.web3.eth.sendTransaction(transactionOptions, (err, transactionId) => {\n        if (err) {\n          console.log('SuperNovas mint failed', err);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint failed!\"\n          });\n        } else {\n          console.log('Payment successful', transactionId);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint successful! Please check Metamask for details and refresh when its done.\"\n          });\n        }\n      }).on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"on confirmation\", confirmationNumber);\n        window.location.reload(false);\n      });\n    };\n\n    this.mintFreeList = (contractAddress, contractABI) => {\n      const account = this.state.currentAccount;\n\n      if (account === null) {\n        console.log('no account detected');\n        this.connect();\n        return;\n      }\n\n      this.setState({\n        isSendingTransaction: true\n      });\n      const encodedAdoptFunction = this.nftContract.methods.mintFreeList().encodeABI();\n      const transactionOptions = {\n        from: account,\n        to: contractAddress,\n        data: encodedAdoptFunction,\n        value: 0\n      };\n      this.web3.eth.sendTransaction(transactionOptions, (err, transactionId) => {\n        if (err) {\n          console.log('SuperNovas mint failed', err);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint failed!\"\n          });\n        } else {\n          console.log('Payment successful', transactionId);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint successful! Please check Metamask for details and refresh when its done.\"\n          });\n        }\n      }).on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"on confirmation\", confirmationNumber);\n        window.location.reload(false);\n      });\n    };\n\n    this.updateInitialStates = () => {\n      this.updateTotalAllowance();\n      this.updateHasSaleStarted();\n      this.updateIsAuthClaim();\n    };\n\n    this.updateTotalAllowance = () => {\n      console.log(\"called totalAllowance\");\n      this.nftContract.methods.allowance(this.state.currentAccount, NFT_CONTRACT_ADDRESS).call().then(totalAllowance => {\n        totalAllowance = parseInt(Web3.utils.fromWei(totalAllowance, 'ether'));\n        this.setState({\n          totalAllowance: totalAllowance\n        });\n      });\n    };\n\n    this.updateHasSaleStarted = () => {\n      this.nftContract.methods.saleIsActive().call().then(hasSaleStarted => {\n        this.setState({\n          hasSaleStarted: hasSaleStarted\n        });\n      });\n    };\n\n    this.updateIsAuthClaim = () => {\n      this.nftContract.methods.totalAvailable(this.state.currentAccount).call().then(isAuthClaim => {\n        const credsAvaliable = Web3.utils.fromWei(isAuthClaim, 'ether');\n        console.log(credsAvaliable);\n        this.setState({\n          isAuthClaim: credsAvaliable\n        });\n      });\n    };\n\n    this.state = {\n      currentAccount: null,\n      totalAllowance: 0,\n      isSendingTransaction: false,\n      purchaseNumber: \"1\",\n      hasSaleStarted: false,\n      isMainnet: true,\n      statusString: null,\n      defaultValue: 1,\n      isAuthClaim: 0\n    };\n    this.textInput = {\n      value: 1\n    };\n    this.updateInput = this.updateInput.bind(this);\n  }\n\n  async handleClick() {\n    await this.getSuperNovas(NFT_CONTRACT_ADDRESS, NFT_ABI, this.textInput.value);\n  }\n\n  async handleWL() {\n    await this.mintAllowList(NFT_CONTRACT_ADDRESS, NFT_ABI, this.textInput.value);\n  }\n\n  async handleFree() {\n    await this.mintFreeList(NFT_CONTRACT_ADDRESS, NFT_ABI, this.textInput.value);\n  }\n\n  async componentDidMount() {\n    if (this.ethereum) {\n      return;\n    }\n\n    this.ethereum = await detectEthereumProvider();\n\n    if (this.ethereum === null || this.ethereum !== window.ethereum) {\n      console.log(\"ethereum provider not detected\");\n      this.setState({\n        currentAccount: null\n      });\n      return;\n    }\n\n    this.web3 = new Web3(this.ethereum);\n\n    if (this.web3 === null) {\n      console.log('web 3 not found');\n      return;\n    }\n\n    this.nftContract = new this.web3.eth.Contract(NFT_ABI, NFT_CONTRACT_ADDRESS, {\n      gasLimit: \"1000000\"\n    });\n    this.connect();\n    /**********************************************************/\n\n    /* Handle chain (network) and chainChanged (per EIP-1193) */\n\n    /**********************************************************/\n\n    const chainId = await this.ethereum.request({\n      method: 'eth_chainId'\n    });\n\n    if (chainId !== \"0x1\") {\n      this.setState({\n        isMainnet: false\n      });\n    }\n\n    this.ethereum.on('chainChanged', handleChainChanged);\n    this.ethereum.on('accountsChanged', handleChainChanged);\n\n    function handleChainChanged(_chainId) {\n      // We recommend reloading the page, unless you must do otherwise\n      window.location.reload();\n    }\n    /***********************************************************/\n\n    /* Handle user accounts and accountsChanged (per EIP-1193) */\n\n    /***********************************************************/\n\n\n    this.ethereum.request({\n      method: 'eth_accounts'\n    }).then(accounts => this.handleAccountsChanged(accounts)).catch(err => {\n      // Some unexpected error.\n      // For backwards compatibility reasons, if no accounts are available,\n      // eth_accounts will return an empty array.\n      console.error(err);\n    }); // Note that this event is emitted on page load.\n    // If the array of accounts is non-empty, you're already\n    // connected.\n\n    this.ethereum.on('accountsChanged', () => this.handleAccountsChanged);\n  }\n\n  updateInput(evt) {\n    this.textInput = {\n      value: evt.target.value\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sticky-cta\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metamask\",\n          children: [\" \", this.state.hasSaleStarted, this.state.currentAccount ? /*#__PURE__*/_jsxDEV(Fab, {\n            style: style,\n            variant: \"extended\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [this.state.currentAccount.substring(0, 6), \"...\", this.state.currentAccount.substring(this.state.currentAccount.length - 4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(Fab, {\n            style: style,\n            variant: \"extended\",\n            onClick: () => this.connect(),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Connect metamask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: '#FFFFFF'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 39\n          }, this), \"Mint SuperNovas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [this.state.hasSaleStarted > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n            style: styleBuy,\n            variant: \"contained\",\n            size: \"large\",\n            onClick: () => this.handleClick(),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Mint Supernovas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 112\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              style: {\n                maxWidth: \"100px\"\n              },\n              inputProps: {\n                style: {\n                  background: \"#fff\"\n                }\n              },\n              variant: \"filled\",\n              onChange: this.updateInput,\n              defaultValue: this.state.defaultValue,\n              margin: \"dense\",\n              size: \"small\",\n              requiered: \"true\",\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 7\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 243\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: styleBuy,\n              variant: \"contained\",\n              size: \"large\",\n              onClick: () => this.handleWL(),\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"WL Mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 97\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 7\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n              style: styleBuy,\n              variant: \"contained\",\n              size: \"large\",\n              onClick: () => this.handleClick(),\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Public Mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 100\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 7\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 133\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 138\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: styleBuy,\n              variant: \"contained\",\n              size: \"large\",\n              onClick: () => this.handleFree(),\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Free Mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 99\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 7\n            }, this), \"\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ClaimButtons;","map":{"version":3,"sources":["/home/vinacho/Dev/SuperNovas/src/components/ClaimButtons.js"],"names":["React","Button","TextField","Fab","detectEthereumProvider","Web3","require","NFT_CONTRACT_ADDRESS","NFT_ABI","style","backgroundColor","color","fontSize","fontFamily","boxShadow","borderRadius","marginTop","styleClaim","margin","styleBuy","position","inputProps","min","max","ClaimButtons","Component","constructor","props","handleAccountsChanged","accounts","length","setState","currentAccount","state","updateInitialStates","connect","console","log","ethereum","undefined","alert","request","method","then","catch","err","code","error","getSuperNovas","contractAddress","contractABI","numPurchase","account","parseInt","amount","utils","toBN","isSendingTransaction","encodedAdoptFunction","nftContract","methods","encodeABI","transactionOptions","from","to","data","value","web3","eth","sendTransaction","transactionId","statusString","on","confirmationNumber","receipt","window","location","reload","mintAllowList","mintFreeList","updateTotalAllowance","updateHasSaleStarted","updateIsAuthClaim","allowance","call","totalAllowance","fromWei","saleIsActive","hasSaleStarted","totalAvailable","isAuthClaim","credsAvaliable","purchaseNumber","isMainnet","defaultValue","textInput","updateInput","bind","handleClick","handleWL","handleFree","componentDidMount","Contract","gasLimit","chainId","handleChainChanged","_chainId","evt","target","render","substring","maxWidth","background"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport '../styles/Global.css';\nimport '../styles/Metamask.css'\nimport {Button, TextField, Fab} from '@material-ui/core';\nimport detectEthereumProvider from '@metamask/detect-provider';\nconst Web3 = require('web3');\n\n// TEST\n// const OPENSEA_WEB = \"https://testnets.opensea.io/assets/0xbEA8123277142dE42571f1fAc045225a1D347977/\";\n //const NFT_CONTRACT_ADDRESS = \"0xbEA8123277142dE42571f1fAc045225a1D347977\"; //test\n\n// MAINNET\n//const OPENSEA_WEB = \"https://opensea.io/assets/0xbEA8123277142dE42571f1fAc045225a1D347977/\";\nconst NFT_CONTRACT_ADDRESS = \"0x270dFdAf253712FA86273D114B27b399Ef333039\";\nconst NFT_ABI =[\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"baseTokenURI\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ApprovalForAll\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"numSuperNovas\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getSuperNovas\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"numSuperNovas\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"mintAllowList\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"mintFreeList\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"previousOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"OwnershipTransferred\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"pausePrivateSale\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"pauseSale\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"renounceOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"numSuperNovas\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"reserveAirdrop\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"_data\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"addresses\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setAllowList\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setApprovalForAll\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"baseURI\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setBaseURI\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"addresses\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setFreeList\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"startPrivateSale\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"startSale\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"withdrawAll\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getApproved\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"hasPrivateSaleStarted\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"hasSaleStarted\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isApprovedForAll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"MAX_GIRLS\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"minted\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"addr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"numAllowMint\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"addr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"numFreeMint\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ownerOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes4\",\n\t\t\t\t\"name\": \"interfaceId\",\n\t\t\t\t\"type\": \"bytes4\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"supportsInterface\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenURI\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];\n\nconst style = {\n  backgroundColor: '#ffff02',\n  color: '#000000',\n  fontSize: 'calc(12px + 2vmin)',\n  fontFamily: 'lemon',\n  boxShadow: 'none',\n  borderRadius: '10px',\n  marginTop: '20px',\n\n  '&:hover': {\n      backgroundColor: '#8CFF9B',\n      color: '#ffffff',\n      boxShadow: 'none',\n  }\n}; \n\nconst styleClaim = {\n    backgroundColor: '#ffff02',\n    color: '#000000',\n    fontSize: 'calc(12px + 2vmin)',\n    fontFamily: 'lemon',\n    boxShadow: 'none',\n    borderRadius: '10px',\n    margin: '0 10px 0 0',\n  \n    '&:hover': {\n        backgroundColor: '#27D3CB',\n        color: '#ffffff',\n        boxShadow: 'none',\n    }\n  };\n\nconst styleBuy = {\n    backgroundColor: '#ffff02',\n\t\n    position: 'relative',\n    color: '#000000',\n    fontSize: 'calc(12px + 2vmin)',\n    fontFamily: 'lemon',\n    boxShadow: 'none',\n    borderRadius: '10px',\n  \n    '&:hover': {\n        backgroundColor: '#8CFF9B',\n        color: '#ffffff',\n        boxShadow: 'none',\n    }\n  };\n  \n  const inputProps = {\n    min: 1,\n    max: 20\n  };\n\nclass ClaimButtons extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentAccount: null,\n      totalAllowance: 0,\n      isSendingTransaction: false,\n      purchaseNumber: \"1\",\n      hasSaleStarted: false,\n      isMainnet: true,\n      statusString: null,\n      defaultValue: 1,\n      isAuthClaim: 0,\n    }\n    this.textInput = {value: 1};\n    this.updateInput = this.updateInput.bind(this);\n  \n  }\n\n\n  async handleClick() {\n    await this.getSuperNovas(NFT_CONTRACT_ADDRESS, NFT_ABI,this.textInput.value);\n  }\n\n  async handleWL() {\n    await this.mintAllowList(NFT_CONTRACT_ADDRESS, NFT_ABI,this.textInput.value);\n  }\n\n  async handleFree() {\n    await this.mintFreeList(NFT_CONTRACT_ADDRESS, NFT_ABI,this.textInput.value);\n  }\n\n\n  async componentDidMount() {\n    \n    if (this.ethereum) {\n      return;\n    }\n    \n    this.ethereum = await detectEthereumProvider();\n    if (this.ethereum === null || this.ethereum !== window.ethereum ) {\n      console.log(\"ethereum provider not detected\");\n      this.setState({\n        currentAccount: null,\n      });\n      return;\n    }\n\n    this.web3 = new Web3(this.ethereum);\n\n    if (this.web3 === null) {\n      console.log('web 3 not found');\n      return;\n    }\n    this.nftContract = new this.web3.eth.Contract(\n      NFT_ABI,\n      NFT_CONTRACT_ADDRESS,\n      { gasLimit: \"1000000\" }\n    );\n\n    this.connect()\n\n    /**********************************************************/\n    /* Handle chain (network) and chainChanged (per EIP-1193) */\n    /**********************************************************/\n    const chainId = await this.ethereum.request({ method: 'eth_chainId' });\n    if (chainId !== \"0x1\") {\n      this.setState({isMainnet: false})\n    }\n\n    this.ethereum.on('chainChanged', handleChainChanged);\n    this.ethereum.on('accountsChanged', handleChainChanged);\n    function handleChainChanged(_chainId) {\n      // We recommend reloading the page, unless you must do otherwise\n      window.location.reload();\n    }\n\n    /***********************************************************/\n    /* Handle user accounts and accountsChanged (per EIP-1193) */\n    /***********************************************************/\n    this.ethereum\n      .request({ method: 'eth_accounts' })\n      .then((accounts) => this.handleAccountsChanged(accounts))\n      .catch((err) => {\n        // Some unexpected error.\n        // For backwards compatibility reasons, if no accounts are available,\n        // eth_accounts will return an empty array.\n        console.error(err);\n      });\n\n    // Note that this event is emitted on page load.\n    // If the array of accounts is non-empty, you're already\n    // connected.\n    this.ethereum.on('accountsChanged', () => this.handleAccountsChanged);\n    \n\n  }\n\n  handleAccountsChanged = (accounts) => {\n    if (accounts.length === 0) {\n      this.setState({\n        currentAccount: null,\n      });\n    } else if (accounts[0] !== this.state.currentAccount) {\n      this.setState({\n        currentAccount: accounts[0],\n      });\n      this.updateInitialStates();\n    }\n\n  }\n\n  connect = () => {\n    console.log(this.ethereum);\n    if (this.ethereum === null || this.ethereum === undefined) {\n      alert(\"no wallet\");\n      return;\n    }\n    if (this.state.currentAccount) {\n      console.log(\"account already connected\");\n      return;\n    }\n    this.ethereum\n    .request({ method: 'eth_requestAccounts' })\n    .then((accounts) => this.handleAccountsChanged(accounts))\n    .catch((err) => {\n      if (err.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        // If this happens, the user rejected the connection request.\n        console.log('Please connect to MetaMask.');\n        \n      } else {\n        console.error(err);\n      }\n    });\n  }\n\n\n  getSuperNovas = (contractAddress, contractABI, numPurchase) => {\n\n   \n\n    const account = this.state.currentAccount;\n\n    if (account === null) {\n      console.log('no account detected');\n      this.connect();\n      return;\n    }\n    numPurchase=parseInt(numPurchase);\n\tconst amount = Web3.utils.toBN('40000000000000000')*numPurchase;\n\n    this.setState({\n      isSendingTransaction: true,\n    });\n\n  \n      const encodedAdoptFunction = this.nftContract.methods.getSuperNovas(numPurchase).encodeABI();\n\n      const transactionOptions = {\n        from: account,\n        to: contractAddress,\n        data: encodedAdoptFunction,\n        value: amount,\n      };\n      this.web3.eth.sendTransaction(transactionOptions, (err, transactionId) => {\n        if  (err) {\n          console.log('SuperNovas mint failed', err)\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint failed!\"\n          });\n        } else {\n          console.log('Payment successful', transactionId);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint successful! Please check Metamask for details and refresh when its done.\"\n          });\n        }\n      }).on(\"confirmation\", (confirmationNumber, receipt) => {\n          console.log(\"on confirmation\", confirmationNumber);\n          window.location.reload(false);\n\n      });\n   \n  }\n\n\n\n\n\n\n  \n\n  mintAllowList = (contractAddress, contractABI, numPurchase) => {\n\n   \n\n    const account = this.state.currentAccount;\n\n    if (account === null) {\n      console.log('no account detected');\n      this.connect();\n      return;\n    }\n    numPurchase=parseInt(numPurchase);\n\tconst amount = Web3.utils.toBN('30000000000000000')*numPurchase;\n\n    this.setState({\n      isSendingTransaction: true,\n    });\n\n  \n      const encodedAdoptFunction = this.nftContract.methods.getSuperNovas(numPurchase).encodeABI();\n\n      const transactionOptions = {\n        from: account,\n        to: contractAddress,\n        data: encodedAdoptFunction,\n        value: amount,\n      };\n      this.web3.eth.sendTransaction(transactionOptions, (err, transactionId) => {\n        if  (err) {\n          console.log('SuperNovas mint failed', err)\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint failed!\"\n          });\n        } else {\n          console.log('Payment successful', transactionId);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint successful! Please check Metamask for details and refresh when its done.\"\n          });\n        }\n      }).on(\"confirmation\", (confirmationNumber, receipt) => {\n          console.log(\"on confirmation\", confirmationNumber);\n          window.location.reload(false);\n\n      });\n   \n  }\n\n  mintFreeList = (contractAddress, contractABI) => {\n\n   \n\n    const account = this.state.currentAccount;\n\n    if (account === null) {\n      console.log('no account detected');\n      this.connect();\n      return;\n    }\n\n\n    this.setState({\n      isSendingTransaction: true,\n    });\n\n  \n      const encodedAdoptFunction = this.nftContract.methods.mintFreeList().encodeABI();\n\n      const transactionOptions = {\n        from: account,\n        to: contractAddress,\n        data: encodedAdoptFunction,\n        value: 0,\n      };\n      this.web3.eth.sendTransaction(transactionOptions, (err, transactionId) => {\n        if  (err) {\n          console.log('SuperNovas mint failed', err)\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint failed!\"\n          });\n        } else {\n          console.log('Payment successful', transactionId);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"SuperNovas mint successful! Please check Metamask for details and refresh when its done.\"\n          });\n        }\n      }).on(\"confirmation\", (confirmationNumber, receipt) => {\n          console.log(\"on confirmation\", confirmationNumber);\n          window.location.reload(false);\n\n      });\n   \n  }\n\n\n  updateInitialStates = () => { \n    this.updateTotalAllowance();\n    this.updateHasSaleStarted();\n    this.updateIsAuthClaim();\n  }\n\n  updateTotalAllowance = () => {\n    console.log(\"called totalAllowance\");\n    this.nftContract.methods.allowance(this.state.currentAccount,NFT_CONTRACT_ADDRESS).call().then((totalAllowance) => {\n      totalAllowance = parseInt(Web3.utils.fromWei(totalAllowance, 'ether'));\n      this.setState({\n        totalAllowance: totalAllowance,\n      });\n    });\n  }\n\n  updateHasSaleStarted = () => {\n    this.nftContract.methods.saleIsActive().call().then((hasSaleStarted) => {\n      this.setState({\n        hasSaleStarted: hasSaleStarted\n      });\n    });\n  }\n\n  updateIsAuthClaim = () => {\n    this.nftContract.methods.totalAvailable(this.state.currentAccount).call().then((isAuthClaim) => {\n      const credsAvaliable = Web3.utils.fromWei(isAuthClaim, 'ether');\n      console.log(credsAvaliable);\n      this.setState({\n        isAuthClaim: credsAvaliable\n      });\n    });\n  }\n\n\n\n\n  updateInput(evt){\n    this.textInput={value: evt.target.value};   \n  }\n\n  render() { \n    return (\n      <div>\n        <div className=\"sticky-cta\">\n           <div className='metamask'> {this.state.hasSaleStarted}\n               {this.state.currentAccount ? (\n                       <Fab style={style} variant=\"extended\">\n                             <b>{this.state.currentAccount.substring(0, 6)}...{this.state.currentAccount.substring(this.state.currentAccount.length -4)}</b>\n                       </Fab>\n                 ) :\n                       <Fab style={style} variant=\"extended\" onClick={() => this.connect()}>\n                           <b>Connect metamask</b>\n                       </Fab>\n                 }\n             </div>\n        </div>\n        <div className=\"App\" >\n\n\t\t<h1 style={{color: '#FFFFFF'}}><br/><br/>Mint SuperNovas</h1>\n    \n          <form noValidate autoComplete=\"off\">\n             \n        \n              {this.state.hasSaleStarted > 0 ? (\n                  <Button style={styleBuy} variant=\"contained\" size=\"large\" onClick={() => this.handleClick()}><b>Mint Supernovas</b></Button>\n                 ) :\n                  <div><br/>\n                 \n\t\t\t\t  <TextField style={{maxWidth: \"100px\"}} inputProps={{ style: { background: \"#fff\"} }} variant=\"filled\" onChange={this.updateInput} defaultValue={this.state.defaultValue}  margin=\"dense\" size=\"small\" requiered=\"true\" type=\"number\"/>&nbsp;<br/>\n\t\t\t\t  <Button style={styleBuy} variant=\"contained\" size=\"large\" onClick={() => this.handleWL()}><b>WL Mint</b></Button>&nbsp;\n\t\t\t\t  <Button style={styleBuy} variant=\"contained\" size=\"large\" onClick={() => this.handleClick()}><b>Public Mint</b></Button>&nbsp;<br/><br/>\n\t\t\t\t  <Button style={styleBuy} variant=\"contained\" size=\"large\" onClick={() => this.handleFree()}><b>Free Mint</b></Button>&nbsp;\n                  </div>\n              } \n\t\t\t  <br/><br/>\n            \n              \n          </form>\n\n        </div>\n      </div>\n     \n    );\n  }\n \n}\n\nexport default ClaimButtons;"]},"metadata":{},"sourceType":"module"}