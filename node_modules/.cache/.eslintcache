[{"/home/dekadente/Dev/SuperNovas/src/index.js":"1","/home/dekadente/Dev/SuperNovas/src/reportWebVitals.js":"2","/home/dekadente/Dev/SuperNovas/src/components/App.js":"3","/home/dekadente/Dev/SuperNovas/src/components/DystoTraits.js":"4","/home/dekadente/Dev/SuperNovas/src/components/Footer.js":"5","/home/dekadente/Dev/SuperNovas/src/components/Roadmap.js":"6","/home/dekadente/Dev/SuperNovas/src/components/Text.js":"7","/home/dekadente/Dev/SuperNovas/src/components/DystoTable.js":"8","/home/dekadente/Dev/SuperNovas/src/components/ClaimButtons.js":"9"},{"size":855,"mtime":1638675051549,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1638675051549,"results":"12","hashOfConfig":"11"},{"size":575,"mtime":1639696623448,"results":"13","hashOfConfig":"11"},{"size":4222,"mtime":1638675051529,"results":"14","hashOfConfig":"11"},{"size":910,"mtime":1638679876389,"results":"15","hashOfConfig":"11"},{"size":1495,"mtime":1638675051529,"results":"16","hashOfConfig":"11"},{"size":3315,"mtime":1638675051529,"results":"17","hashOfConfig":"11"},{"size":11012,"mtime":1638675051529,"results":"18","hashOfConfig":"11"},{"size":28868,"mtime":1638681076499,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1ueiho6",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},"/home/dekadente/Dev/SuperNovas/src/index.js",["42","43","44","45"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/Global.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport ClaimButtons from './components/ClaimButtons';\nimport DystoTable from './components/DystoTable'\nimport DystoTraits from './components/DystoTraits'\nimport Text from './components/Text';\nimport Roadmap from './components/Roadmap';\nimport Footer from './components/Footer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <ClaimButtons />\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["46","47"],"/home/dekadente/Dev/SuperNovas/src/reportWebVitals.js",[],"/home/dekadente/Dev/SuperNovas/src/components/App.js",[],"/home/dekadente/Dev/SuperNovas/src/components/DystoTraits.js",[],"/home/dekadente/Dev/SuperNovas/src/components/Footer.js",["48","49"],"import '../styles/Text.css';\nimport '../styles/Global.css';\nimport {Button, Container} from '@material-ui/core';\n\nconst styleClaim = {\n  backgroundColor: '#E54286',\n  color: '#12173D',\n  fontSize: 'calc(12px + 2vmin)',\n  fontFamily: 'lemon',\n  boxShadow: 'none',\n  borderRadius: '0px',\n\n  '&:hover': {\n      backgroundColor: '#78FAE6',\n      color: '#ffffff',\n      boxShadow: 'none',\n  }\n};\n\nfunction Footer() {\n  return (\n    <Container fixed style={{maxWidth: \"700px\"}}>\n    <div className=\"Text\">\n        <p style={{color: '#FFFFFF'}}>\n        <a href=\"https://discord.gg/DystoPunks\" target=\"_blank\" rel=\"noopener noreferrer\"><b>Discord</b></a> | <a href=\"https://twitter.com/DystoPunks\" target=\"_blank\" rel=\"noopener noreferrer\"><b>Twitter</b></a>\n        <br/>\n        <b style={{color: '#e8844f'}}>Â© 2021 SuperNova</b><br/><br/>\n        </p>\n    </div>\n    </Container>\n  );\n}\n\nexport default Footer;\n\n","/home/dekadente/Dev/SuperNovas/src/components/Roadmap.js",[],"/home/dekadente/Dev/SuperNovas/src/components/Text.js",[],"/home/dekadente/Dev/SuperNovas/src/components/DystoTable.js",[],"/home/dekadente/Dev/SuperNovas/src/components/ClaimButtons.js",["50","51"],"import React from \"react\"\nimport '../styles/Global.css';\nimport '../styles/Metamask.css'\nimport {Button, TextField, Fab} from '@material-ui/core';\nimport detectEthereumProvider from '@metamask/detect-provider';\nconst Web3 = require('web3');\n\n// TEST\n// const OPENSEA_WEB = \"https://testnets.opensea.io/assets/0xbEA8123277142dE42571f1fAc045225a1D347977/\";\n //const NFT_CONTRACT_ADDRESS = \"0xbEA8123277142dE42571f1fAc045225a1D347977\"; //test\n\n// MAINNET\n//const OPENSEA_WEB = \"https://opensea.io/assets/0xbEA8123277142dE42571f1fAc045225a1D347977/\";\nconst NFT_CONTRACT_ADDRESS = \"0xc13F4F0F865bAc08F62654B57E38669EbC4747a3\";\nconst CRATES_CONTRACT_ADDRESS = \"0xC50F11281b0821E5a9AD3DD77C33Eaf82d3094f4\";\nconst NFT_ABI =[\n\t{\n\t\t\"inputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"previousOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"OwnershipTransferred\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"BASE_RATE\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"DystoAddress\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"END\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"INITIAL_ISSUANCE\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"MAX_CLAIM\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"START\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"allowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"burn\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"burnFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"claim\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"decimals\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"subtractedValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"decreaseAllowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"spender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"addedValue\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"increaseAllowance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"lastUpdate\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"punkid\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"punkCreds\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"renounceOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"reservedCreds\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"saleIsActive\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"newState\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setSaleState\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"ownwer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"totalAvailable\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"recipient\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transfer\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"sender\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"recipient\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"unclaimedCreds\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];\n\n\nconst CRATES_ABI =[\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ApprovalForAll\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"previousOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"OwnershipTransferred\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"ids\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"values\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"TransferBatch\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"TransferSingle\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"URI\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"numberOfTokens\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"mint\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"renounceOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"ids\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"amounts\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"data\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeBatchTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"data\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setApprovalForAll\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"newState\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setSaleState\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"uri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"accounts\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"ids\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOfBatch\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"BurnAddress\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"CredsAddress\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"DystoAddress\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"exists\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"account\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isApprovedForAll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"saleIsActive\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes4\",\n\t\t\t\t\"name\": \"interfaceId\",\n\t\t\t\t\"type\": \"bytes4\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"supportsInterface\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"ownwer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"totalAvailable\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"id\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"uri\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n];\nconst style = {\n  backgroundColor: '#e8844f',\n  color: '#000000',\n  fontSize: 'calc(12px + 2vmin)',\n  fontFamily: 'lemon',\n  boxShadow: 'none',\n  borderRadius: '10px',\n  marginTop: '20px',\n\n  '&:hover': {\n      backgroundColor: '#8CFF9B',\n      color: '#ffffff',\n      boxShadow: 'none',\n  }\n}; \n\nconst styleClaim = {\n    backgroundColor: '#e8844f',\n    color: '#000000',\n    fontSize: 'calc(12px + 2vmin)',\n    fontFamily: 'lemon',\n    boxShadow: 'none',\n    borderRadius: '10px',\n    margin: '0 10px 0 0',\n  \n    '&:hover': {\n        backgroundColor: '#27D3CB',\n        color: '#ffffff',\n        boxShadow: 'none',\n    }\n  };\n\nconst styleBuy = {\n    backgroundColor: '#e8844f',\n    color: '#000000',\n    fontSize: 'calc(12px + 2vmin)',\n    fontFamily: 'lemon',\n    boxShadow: 'none',\n    borderRadius: '10px',\n  \n    '&:hover': {\n        backgroundColor: '#8CFF9B',\n        color: '#ffffff',\n        boxShadow: 'none',\n    }\n  };\n  \n  const inputProps = {\n    min: 1,\n    max: 20\n  };\n\nclass ClaimButtons extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentAccount: null,\n      totalAllowance: 0,\n      isSendingTransaction: false,\n      purchaseNumber: \"1\",\n      hasSaleStarted: false,\n      isMainnet: true,\n      statusString: null,\n      defaultValue: 1,\n      isAuthClaim: 0,\n    }\n    this.textInput = {value: 1};\n    this.updateInput = this.updateInput.bind(this);\n  \n  }\n\n\n  async handleClick() {\n    await this.buyCrates(CRATES_CONTRACT_ADDRESS, CRATES_ABI,this.textInput.value);\n  }\n\n  async handleAprobal() {\n    await this.aprobalCrates(NFT_CONTRACT_ADDRESS, NFT_ABI,this.textInput.value);\n  }\n\n  async handleClaim() {\n    await this.claimCreds(NFT_CONTRACT_ADDRESS, NFT_ABI,this.textInput.value);\n  }\n\n\n  async componentDidMount() {\n    \n    if (this.ethereum) {\n      return;\n    }\n    \n    this.ethereum = await detectEthereumProvider();\n    if (this.ethereum === null || this.ethereum !== window.ethereum ) {\n      console.log(\"ethereum provider not detected\");\n      this.setState({\n        currentAccount: null,\n      });\n      return;\n    }\n\n    this.web3 = new Web3(this.ethereum);\n\n    if (this.web3 === null) {\n      console.log('web 3 not found');\n      return;\n    }\n    this.nftContract = new this.web3.eth.Contract(\n      NFT_ABI,\n      NFT_CONTRACT_ADDRESS,\n      { gasLimit: \"1000000\" }\n    );\n\n    this.cratesContract = new this.web3.eth.Contract(\n      CRATES_ABI,\n      CRATES_CONTRACT_ADDRESS,\n      { gasLimit: \"1000000\" }\n    );\n\n    this.connect()\n\n    /**********************************************************/\n    /* Handle chain (network) and chainChanged (per EIP-1193) */\n    /**********************************************************/\n    const chainId = await this.ethereum.request({ method: 'eth_chainId' });\n    if (chainId !== \"0x1\") {\n      this.setState({isMainnet: false})\n    }\n\n    this.ethereum.on('chainChanged', handleChainChanged);\n    this.ethereum.on('accountsChanged', handleChainChanged);\n    function handleChainChanged(_chainId) {\n      // We recommend reloading the page, unless you must do otherwise\n      window.location.reload();\n    }\n\n    /***********************************************************/\n    /* Handle user accounts and accountsChanged (per EIP-1193) */\n    /***********************************************************/\n    this.ethereum\n      .request({ method: 'eth_accounts' })\n      .then((accounts) => this.handleAccountsChanged(accounts))\n      .catch((err) => {\n        // Some unexpected error.\n        // For backwards compatibility reasons, if no accounts are available,\n        // eth_accounts will return an empty array.\n        console.error(err);\n      });\n\n    // Note that this event is emitted on page load.\n    // If the array of accounts is non-empty, you're already\n    // connected.\n    this.ethereum.on('accountsChanged', () => this.handleAccountsChanged);\n    \n\n  }\n\n  handleAccountsChanged = (accounts) => {\n    if (accounts.length === 0) {\n      this.setState({\n        currentAccount: null,\n      });\n    } else if (accounts[0] !== this.state.currentAccount) {\n      this.setState({\n        currentAccount: accounts[0],\n      });\n      this.updateInitialStates();\n    }\n\n  }\n\n  connect = () => {\n    console.log(this.ethereum);\n    if (this.ethereum === null || this.ethereum === undefined) {\n      alert(\"no wallet\");\n      return;\n    }\n    if (this.state.currentAccount) {\n      console.log(\"account already connected\");\n      return;\n    }\n    this.ethereum\n    .request({ method: 'eth_requestAccounts' })\n    .then((accounts) => this.handleAccountsChanged(accounts))\n    .catch((err) => {\n      if (err.code === 4001) {\n        // EIP-1193 userRejectedRequest error\n        // If this happens, the user rejected the connection request.\n        console.log('Please connect to MetaMask.');\n        \n      } else {\n        console.error(err);\n      }\n    });\n  }\n\n\n  buyCrates = (contractAddress, contractABI, numPurchase) => {\n\n   \n\n    const account = this.state.currentAccount;\n\n    if (account === null) {\n      console.log('no account detected');\n      this.connect();\n      return;\n    }\n    numPurchase=parseInt(numPurchase);\n\n\n    this.setState({\n      isSendingTransaction: true,\n    });\n\n  \n      const encodedAdoptFunction = this.cratesContract.methods.mint(numPurchase).encodeABI();\n\n      const transactionOptions = {\n        from: account,\n        to: contractAddress,\n        data: encodedAdoptFunction,\n        value: 0,\n      };\n      this.web3.eth.sendTransaction(transactionOptions, (err, transactionId) => {\n        if  (err) {\n          console.log('Crates mint failed', err)\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"Crates mint failed!\"\n          });\n        } else {\n          console.log('Payment successful', transactionId);\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"Crates mint successful! Please check Metamask for details and refresh when its done.\"\n          });\n        }\n      }).on(\"confirmation\", (confirmationNumber, receipt) => {\n          console.log(\"on confirmation\", confirmationNumber);\n          window.location.reload(false);\n\n      });\n   \n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n  aprobalCrates = (contractAddress, contractABI, numPurchase) => {\n\n   \n\n    const account = this.state.currentAccount;\n\n    if (account === null) {\n      console.log('no account detected');\n      this.connect();\n      return;\n    }\n    numPurchase=parseInt(numPurchase);\n    if (numPurchase > 20 || numPurchase < 1) {\n      return;\n    }\n\n    this.setState({\n      isSendingTransaction: true,\n    });\n\n      const amount = Web3.utils.toBN('77000000000000000000000000');\n      const encodedAdoptFunction = this.nftContract.methods.approve(CRATES_CONTRACT_ADDRESS,amount).encodeABI();\n\n      const transactionOptions = {\n        from: account,\n        to: contractAddress,\n        data: encodedAdoptFunction,\n        value: 0,\n      };\n      this.web3.eth.sendTransaction(transactionOptions, (err, transactionId) => {\n        if  (err) {\n          console.log('approve failed', err)\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"Payment failed!\"\n          });\n        } else {\n          console.log('approve successful', transactionId)\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"approve successful!.\"\n          });\n          \n        }\n      });\n\n  }\n\n  claimCreds = (contractAddress, contractABI) => {\n\n   \n\n    const account = this.state.currentAccount;\n\n    if (account === null) {\n      console.log('no account detected');\n      return;\n    }\n \n\n    this.setState({\n      isSendingTransaction: true,\n    });\n\n    this.nftContract.methods.totalAvailable(this.state.currentAccount).call().then((unitPrice) => {\n      const encodedAdoptFunction = this.nftContract.methods.claim().encodeABI();\n\n      const transactionOptions = {\n        from: account,\n        to: contractAddress,\n        data: encodedAdoptFunction,\n        value: 0,\n      };\n      this.web3.eth.sendTransaction(transactionOptions, (err, transactionId) => {\n        if  (err) {\n          console.log('Payment failed', err)\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"Transaction failed!\"\n          });\n        } else {\n          console.log('Payment successful', transactionId)\n          this.setState({\n            isSendingTransaction: false,\n            statusString: \"Claim successful! Please check Metamask for details and refresh when its done.\"\n          });\n        }\n      });\n    });\n  }\n\n\n  updateInitialStates = () => { \n    this.updateTotalAllowance();\n    this.updateHasSaleStarted();\n    this.updateIsAuthClaim();\n  }\n\n  updateTotalAllowance = () => {\n    console.log(\"called totalAllowance\");\n    this.nftContract.methods.allowance(this.state.currentAccount,CRATES_CONTRACT_ADDRESS).call().then((totalAllowance) => {\n      totalAllowance = parseInt(Web3.utils.fromWei(totalAllowance, 'ether'));\n      this.setState({\n        totalAllowance: totalAllowance,\n      });\n    });\n  }\n\n  updateHasSaleStarted = () => {\n    this.nftContract.methods.saleIsActive().call().then((hasSaleStarted) => {\n      this.setState({\n        hasSaleStarted: hasSaleStarted\n      });\n    });\n  }\n\n  updateIsAuthClaim = () => {\n    this.nftContract.methods.totalAvailable(this.state.currentAccount).call().then((isAuthClaim) => {\n      const credsAvaliable = Web3.utils.fromWei(isAuthClaim, 'ether');\n      console.log(credsAvaliable);\n      this.setState({\n        isAuthClaim: credsAvaliable\n      });\n    });\n  }\n\n\n\n\n  updateInput(evt){\n    this.textInput={value: evt.target.value};   \n  }\n\n  render() { \n    return (\n      <div>\n        <div className=\"sticky-cta\">\n           <div className='metamask'> {this.state.hasSaleStarted}\n               {this.state.currentAccount ? (\n                       <Fab style={style} variant=\"extended\">\n                             <b>{this.state.currentAccount.substring(0, 6)}...{this.state.currentAccount.substring(this.state.currentAccount.length -4)}</b>\n                       </Fab>\n                 ) :\n                       <Fab style={style} variant=\"extended\" onClick={() => this.connect()}>\n                           <b>Connect metamask</b>\n                       </Fab>\n\n                 }\n             </div>\n        </div>\n        <div className=\"App\">\n    \n          <form noValidate autoComplete=\"off\">\n             \n        \n              {this.state.totalAllowance > 0 ? (\n                  <Button style={styleBuy} variant=\"contained\" size=\"large\" onClick={() => this.handleClick()}><b>Mint Supernovas</b></Button>\n                 ) :\n                  <div><br/>\n                  <Button style={styleBuy} variant=\"contained\" size=\"large\" onClick={() => this.handleClick()}><b>Mint SuperNovas</b></Button>&nbsp;\n\t\t\t\t  <TextField style={{maxWidth: \"100px\"}} inputProps={{ style: { color: \"#fff\" } }} variant=\"filled\" onChange={this.updateInput} defaultValue={this.state.defaultValue}  margin=\"dense\" size=\"small\" requiered=\"true\" type=\"number\"/>\n                  </div>\n              } \n\t\t\t  <br/><br/>\n            \n              \n          </form>\n\n        </div>\n      </div>\n     \n    );\n  }\n \n}\n\nexport default ClaimButtons;",{"ruleId":"52","severity":1,"message":"53","line":8,"column":8,"nodeType":"54","messageId":"55","endLine":8,"endColumn":18},{"ruleId":"52","severity":1,"message":"56","line":9,"column":8,"nodeType":"54","messageId":"55","endLine":9,"endColumn":19},{"ruleId":"52","severity":1,"message":"57","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":12},{"ruleId":"52","severity":1,"message":"58","line":11,"column":8,"nodeType":"54","messageId":"55","endLine":11,"endColumn":15},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"52","severity":1,"message":"63","line":3,"column":9,"nodeType":"54","messageId":"55","endLine":3,"endColumn":15},{"ruleId":"52","severity":1,"message":"64","line":5,"column":7,"nodeType":"54","messageId":"55","endLine":5,"endColumn":17},{"ruleId":"52","severity":1,"message":"64","line":1105,"column":7,"nodeType":"54","messageId":"55","endLine":1105,"endColumn":17},{"ruleId":"52","severity":1,"message":"65","line":1136,"column":9,"nodeType":"54","messageId":"55","endLine":1136,"endColumn":19},"no-unused-vars","'DystoTable' is defined but never used.","Identifier","unusedVar","'DystoTraits' is defined but never used.","'Text' is defined but never used.","'Roadmap' is defined but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'Button' is defined but never used.","'styleClaim' is assigned a value but never used.","'inputProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]